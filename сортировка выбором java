import java.util.Arrays;

class SelectionSort {
    // Метод сортировки выбором (Selection Sort)
    //Алгоритм ищет минимальный элемент в неотсортированной части массива и ставит его на текущее место (в начало неотсортированной части).
    public static void selectionSort(int[] arr) {
        int n = arr.length; // длина массива

        // Внешний цикл — проходим по всем элементам массива
        for (int i = 0; i < n; i++) {
            int minIndex = i; // предполагаем, что текущий элемент минимальный

            // Внутренний цикл — ищем минимальный элемент в оставшейся части массива
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[minIndex]) {
                    minIndex = j; // обновляем индекс минимального элемента
                }
            }

            // Меняем местами текущий элемент и найденный минимальный элемент
            int temp = arr[i];
            arr[i] = arr[minIndex];
            arr[minIndex] = temp;
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // Исходный массив для сортировки
        int[] testArray = {64, 25, 12, 22, 11};

        // Выводим массив до сортировки
        System.out.println("Исходный массив: " + Arrays.toString(testArray));

        // Вызываем метод сортировки
        SelectionSort.selectionSort(testArray);

        // Выводим массив после сортировки
        System.out.println("Отсортированный массив: " + Arrays.toString(testArray));
    }
}
